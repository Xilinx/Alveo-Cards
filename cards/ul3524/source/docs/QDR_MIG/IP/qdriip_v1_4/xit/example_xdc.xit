source_subcore_ipfile xilinx.com:ip:mem:1.4 utility/db.tcl
variable tcl_scope
set tcl_scope xit

[loadMigEngine "QDRIIP"]
set InstName [ ::xit::current_inst ]
set ipfile [ add_ipfile -force -processingOrder late -usedIn [ list implementation simulation ] "par/example_design.xdc" ]

proc setSubParam {} {

	set memSubName [ getMemSubName ]
    set subParamMap {}
    foreach c { 0 } {
        lappend subParamMap C${c}.${memSubName}_MemoryType [ getuser C${c}.${memSubName}_MemoryType ]
        lappend subParamMap C${c}.${memSubName}_MemoryPart [ getuser C${c}.${memSubName}_MemoryPart ]
		lappend subParamMap C${c}.${memSubName}_DataWidth [ getuser C${c}.${memSubName}_DataWidth ]
		
		lappend subParamMap C${c}.${memSubName}_TimePeriod [ getuser C${c}.${memSubName}_TimePeriod ]
		if { $memSubName == "DDR4" || $memSubName == "DDR3" } {
			lappend subParamMap C${c}.${memSubName}_ChipSelect [ getuser C${c}.${memSubName}_ChipSelect ]
		}
        if { $memSubName == "DDR4" || $memSubName == "DDR3" || $memSubName == "RLD3" } {
            lappend subParamMap C${c}.${memSubName}_DataMask [ getuser C${c}.${memSubName}_DataMask ]
        }
        lappend subParamMap C${c}.ControllerType [ getuser C${c}.ControllerType ]
    }

    set datadir [ get_data_dir ]
	set fpgapart [ get_project_property "PART" ]
    lappend subParamMap -part $fpgapart
    lappend subParamMap -datadir $datadir
    
    return $subParamMap
}

set tempArray [ setSubParam ]
set memSubName [ getMemSubName ]
set board_interface_val "Custom"

set byteStatus [ memory::memory_v1::Ip_memory_byteSelectionStatus $InstName "0" ]
set result [ memory::memory_v1::Ip_memory_CheckIOPlanningCompletion $InstName "0" {*}$tempArray ]
#dbg "IOPlanningCompletion in xdc result: $result"

if { $result == "1" && $byteStatus == "1" } {

    set memSubName2 [ getMemSubName ]
#    set dataMask [getuser C0.DDR4_DataMask ]
    set sysClkType [ getuser System_Clock ]
    set inClkFreqPs [ getmodelparam CAL_INPUT_CLK_PERIOD ]
    set inClkFreqNs [ expr 1.0 * $inClkFreqPs/1000 ]
    if { [ string compare $sysClkType "No_Buffer" ] == 0 } {
        puts_ipfile $ipfile "create_clock -period $inClkFreqNs \[get_ports c0_sys_clk_p\]"
        puts_ipfile $ipfile "\n"
    }
    
    #dbg "board_interface_val: $board_interface_val "
    if { $board_interface_val == "Custom" } {
        puts_ipfile $ipfile "#Pin LOC constraints for the status signals init_calib_complete and data_compare_error\n"
        puts_ipfile $ipfile "#LOC constraints provided if the pins are selected for status signals\n"
        set ex_constraint_data [ example_xdc_generate ]
        foreach item2 $ex_constraint_data {
            puts_ipfile $ipfile $item2
        }
        set constraint_data [ xdc_generate ]
        foreach item $constraint_data {
            puts_ipfile $ipfile $item
        }
    }

    #puts_ipfile $ipfile "\n"
    #if { [ getmodelparam C0.SYSCLK_CENTER_INFO ] == "FALSE"  || [ getuser System_Clock ] == "No_Buffer" } {
    #      puts_ipfile $ipfile "set_property CLOCK_DEDICATED_ROUTE FALSE \[get_pins -hier -filter \{NAME =~ *\/u_qdriip_infrastructure\/mmcme3_adv_inst\/CLKIN1\}\]"
    #}
    #puts_ipfile $ipfile "## LOC constraints for clock buffers. This is done to reduce clock skew.\n"
    #puts_ipfile $ipfile "## For more detail about the clocking, please refer to clocking section in PG150.\n"

    #puts_ipfile $ipfile "set_property LOC BUFGCE_[getmodelparam C0.BUFG_LOC_1] \[get_cells -hier -filter \{NAME =~ *\/u_qdriip_pll_rst\/u_bufg_divClk\}\]"
    #puts_ipfile $ipfile "set_property LOC BUFGCE_DIV_[getmodelparam C0.BUFG_LOC_2] \[get_cells -hier -filter \{NAME =~ *\/u_qdriip_pll_rst\/u_bufg_riuClk\}\]"
    
    #puts_ipfile $ipfile "\n"
    #puts_ipfile $ipfile "create_pblock pblock_${InstName}"
    #puts_ipfile $ipfile "add_cells_to_pblock pblock_${InstName} -top"
    #puts_ipfile $ipfile "resize_pblock \[get_pblocks pblock_${InstName}\] -add {[getmodelparam C0.PBLOCK_SLICE_LOC] [getmodelparam C0.PBLOCK_RAMB36_LOC] [getmodelparam C0.PBLOCK_RAMB18_LOC] }"        
    #puts_ipfile $ipfile "\n"
    #puts_ipfile $ipfile "\n"
    #puts_ipfile $ipfile "## Below pin LOC constraints are for system clock and system reset and\n" 
    #puts_ipfile $ipfile "## memory related pins\n"
    #set impedence_data [ xdc_output_impedence ]
    #foreach impedence $impedence_data {
    #puts_ipfile $ipfile $impedence
    #}
    
    #puts_ipfile $ipfile "\n"
    #puts_ipfile $ipfile "\n"

    #set ioStandards_data [ xdc_iostandards ]
    #foreach ioStd $ioStandards_data {
    #puts_ipfile $ipfile $ioStd
    #}
}
	set arch    [ get_project_property "ARCHITECTURE" ]
	set device  [ get_project_property "DEVICE" ]
	set packag [ get_project_property "PACKAGE" ]
if {$arch == "virtexuplusHBM" && $device == "xcu280" && $packag == "fsvh2892"} {
    puts_ipfile $ipfile "\nset_property PACKAGE_PIN D32 \[get_ports hbm_catrip_output\]\nset_property IOSTANDARD LVCMOS18 \[get_ports hbm_catrip_output\]"
} elseif {$arch == "virtexuplusHBM" && $device == "xcu50" && $packag == "fsvh2104"} {
    puts_ipfile $ipfile "\nset_property PACKAGE_PIN J18 \[get_ports hbm_catrip_output\]\nset_property IOSTANDARD LVCMOS18 \[get_ports hbm_catrip_output\]"
}
close_ipfile $ipfile
[unloadMigEngine "QDRIIP"]
